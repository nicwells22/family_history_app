- id: who_is_father
  question: "Who is {{ person.name }}'s father?"
  type: "multiple_choice"
  required_fields: ["father_id"]
  answer_function: "person_data[person.father_id].name"
  choices_function: "get_name_choices_by_gender(person_data, person.father_id, 'male')"

- id: who_is_mother
  question: "Who is {{ person.name }}'s mother?"
  type: "multiple_choice"
  required_fields: ["mother_id"]
  answer_function: "person_data[person.mother_id].name"
  choices_function: "get_name_choices_by_gender(person_data, person.mother_id, 'female')"

- id: where_was_born
  question: "Where was {{ person.name }} born?"
  type: "multiple_choice"
  required_fields: ["birth_place"]
  answer_function: "person.birth_place"
  choices_function: "get_place_choices('birth_place', person_data, person.birth_place)"

- id: where_died
  question: "Where did {{ person.name }} die?"
  type: "multiple_choice"
  required_fields: ["death_place"]
  answer_function: "person.death_place"
  choices_function: "get_place_choices('death_place', person_data, person.death_place)"

- id: age_at_death
  question: "How old was {{ person.name }} when they died?"
  type: "multiple_choice"
  required_fields: ["birth_date", "death_date"]
  answer_function: "calculate_age(person.birth_date, person.death_date)"
  choices_function: "get_age_choices(person.birth_date, person.death_date)"

- id: father_age_at_birth
  question: "How old was {{ person_data[person.father_id].name }} when {{ person.name }} was born?"
  type: "multiple_choice"
  required_fields: ["birth_date", "father.birth_date"]
  answer_function: "calculate_age(person_data[person.father_id].birth_date, person.birth_date)"
  choices_function: "get_age_choices(person_data[person.father_id].birth_date, person.birth_date)"

- id: mother_age_at_birth
  question: "How old was {{ person_data[person.mother_id].name }} when {{ person.name }} was born?"
  type: "multiple_choice"
  required_fields: ["birth_date", "mother.birth_date"]
  answer_function: "calculate_age(person_data[person.mother_id].birth_date, person.birth_date)"
  choices_function: "get_age_choices(person_data[person.mother_id].birth_date, person.birth_date)"

- id: which_parent_was_older
  question: "Is {{ person.name }}'s father or mother older?"
  type: "multiple_choice"
  required_fields: ["father.birth_date", "mother.birth_date"]
  answer_function: >
    compare_ages(
      calculate_age(person_data[person.father_id].birth_date, person.birth_date),
      calculate_age(person_data[person.mother_id].birth_date, person.birth_date)
    )
  choices_function: >
    ["Mother", "Father", "They were the same age"]

- id: died_where_born
  question: "Did {{ person.name }} die in the same place they were born?"
  type: "multiple_choice"
  required_fields: ["birth_place", "death_place"]
  answer_function: "person.birth_place == person.death_place"
  choices_function: "[True, False]"

- id: year_of_birth
  question: "In what year was {{ person.name }} born?"
  type: "multiple_choice"
  required_fields: ["birth_date"]
  answer_function: "get_year(person.birth_date)"
  choices_function: "get_year_choices(person.birth_date)"

- id: paternal_grandfather
  question: "Who is {{ person.name }}'s paternal grandfather?"
  type: "multiple_choice"
  required_fields: ["father_id"]
  required_relationships: ["father.father"]
  answer_function: "person_data[person.father_id].father_id and person_data[person_data[person.father_id].father_id].name or 'Unknown'"
  choices_function: >
    get_name_choices_by_gender(
      person_data, 
      person_data.get(person_data.get(person.father_id, {}).father_id, {}), 
      'male'
    )

- id: paternal_grandmother
  question: "Who is {{ person.name }}'s paternal grandmother?"
  type: "multiple_choice"
  required_fields: ["father_id"]
  required_relationships: ["father.mother"]
  answer_function: "person_data[person.father_id].mother_id and person_data[person_data[person.father_id].mother_id].name or 'Unknown'"
  choices_function: >
    get_name_choices_by_gender(
      person_data, 
      person_data.get(person_data.get(person.father_id, {}).mother_id, {}), 
      'female'
    )

- id: maternal_grandfather
  question: "Who is {{ person.name }}'s maternal grandfather?"
  type: "multiple_choice"
  required_fields: ["mother_id"]
  required_relationships: ["mother.father"]
  answer_function: "person_data[person.mother_id].father_id and person_data[person_data[person.mother_id].father_id].name or 'Unknown'"
  choices_function: >
    get_name_choices_by_gender(
      person_data, 
      person_data.get(person_data[person.mother_id].father_id, {}), 
      'male'
    )

- id: maternal_grandmother
  question: "Who is {{ person.name }}'s maternal grandmother?"
  type: "multiple_choice"
  required_fields: ["mother_id"]
  required_relationships: ["mother.mother"]
  answer_function: "person_data[person.mother_id].mother_id and person_data[person_data[person.mother_id].mother_id].name or 'Unknown'"
  choices_function: >
    get_name_choices_by_gender(
      person_data, 
      person_data.get(person_data[person.mother_id].mother_id, {}), 
      'female'
    )

- id: year_of_death
  question: "In what year did {{ person.name }} die?"
  type: "multiple_choice"
  required_fields: ["death_date"]
  answer_function: "get_year(person.death_date)"
  choices_function: "get_year_choices(person.death_date)"

